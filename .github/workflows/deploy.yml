name: Blog CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ping: 1})'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        resources:
          limits:
            memory: 512M

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..15}; do
            if docker exec $(docker ps -q --filter ancestor=mongo:6.0) mongo --eval 'db.runCommand({ping:1})'; then
              echo "MongoDB is ready!"
              break
            fi
            echo "Waiting for MongoDB..."
            sleep 10
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t saivardhan24/backend:latest ./backend
          docker push saivardhan24/backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t saivardhan24/frontend:latest ./frontend
          docker push saivardhan24/frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          ssh -i <(echo "$SSH_KEY") -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            docker pull saivardhan24/backend:latest
            docker pull saivardhan24/frontend:latest
            docker-compose up -d
          EOF

      - name: Rollback on failure
        if: failure()
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          ssh -i <(echo "$SSH_KEY") -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            docker-compose down
            docker-compose up -d
          EOF

      - name: Show MongoDB logs on failure
        if: failure()
        run: docker logs $(docker ps -aq --filter ancestor=mongo:6.0)